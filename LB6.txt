ЛР №6
Проектування багатотабличних запитів (внутрішнє з'єднання, inner join, left join, right join, self join, subquery, correlated subquery, exists, not exist, union)
1. Вивести значення наступних колонок: назва книги, ціна, назва видавництва. Використовувати внутрішнє з'єднання, застосовуючи where.
2. Вивести значення наступних колонок: назва книги, назва категорії. Використовувати внутрішнє з'єднання, застосовуючи inner join.
3. Вивести значення наступних колонок: назва книги, ціна, назва видавництва, формат.
4. Вивести значення наступних колонок: тема, категорія, назва книги, назва видавництва. Фільтр по темам і категоріям.
5. Вивести книги видавництва 'BHV', видані після 2000 р
6. Вивести загальну кількість сторінок по кожній назві категорії. Фільтр по спадаючій кількості сторінок.
7. Вивести середню вартість книг по темі 'Використання ПК' і категорії 'Linux'.
8. Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи where.
9. Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи inner join.
10. Вивести всі дані універсального відношення. Використовувати зовнішнє з'єднання, застосовуючи left join / rigth join.
11. Вивести пари книг, що мають однакову кількість сторінок. Використовувати само об’єднання і аліаси (self join).
12. Вивести тріади книг, що мають однакову ціну. Використовувати самооб'єднання і аліаси (self join).
13. Вивести всі книги категорії 'C ++'. Використовувати підзапити (subquery).
14. Вивести книги видавництва 'BHV', видані після 2000 р Використовувати підзапити (subquery).
15. Вивести список видавництв, у яких розмір книг перевищує 400 сторінок. Використовувати пов'язані підзапити (correlated subquery).
16. Вивести список категорій в яких більше 3-х книг. Використовувати пов'язані підзапити (correlated subquery).
17. Вивести список книг видавництва 'BHV', якщо в списку є хоча б одна книга цього видавництва. Використовувати exists.
18. Вивести список книг видавництва 'BHV', якщо в списку немає жодної книги цього видавництва. Використовувати not exists.
19. Вивести відсортований загальний список назв тем і категорій. Використовувати union.
20. Вивести відсортований в зворотному порядку загальний список перших слів, назв книг і категорій що не повторюються. Використовувати union.

1. Вивести значення наступних колонок: назва книги, ціна, назва видавництва. Використовувати внутрішнє з'єднання, застосовуючи where.
SELECT book.Title, book.Price, book_production.Production
FROM Book
INNER JOIN book_production ON book.Production_id = book_production.id
WHERE book_production.Production = 'Видавнича група BHV';

2. Вивести значення наступних колонок: назва книги, назва категорії. Використовувати внутрішнє з'єднання, застосовуючи inner join.
SELECT Book.Title, book_category.Category
FROM Book
INNER JOIN book_category ON Book.Category_id = book_category.id;

3. Вивести значення наступних колонок: назва книги, ціна, назва видавництва, формат.
SELECT book.Title, Book.Price, book_production.Production, Book.Format
FROM Book
INNER JOIN book_production ON book.Production_id = book_production.id;

4. Вивести значення наступних колонок: тема, категорія, назва книги, назва видавництва. Фільтр по темам і категоріям.
SELECT book_topic.Topic, book_category.Category, Book.Title, book_production.Production
FROM Book
INNER JOIN book_topic ON Book.Topic_id = book_topic.id
INNER JOIN book_category ON Book.Category_id = book_category.id
INNER JOIN book_production ON Book.Production_id = book_production.id
WHERE book_topic.Topic = 'Операційні системи' AND book_category.Category = 'Підручники';

5. Вивести книги видавництва 'BHV', видані після 2000 р
SELECT Book.Title
FROM Book
INNER JOIN book_production ON Book.Production_id = book_production.id
WHERE book_production.Production = 'Видавнича група BHV' AND Book.Date > '2000-01-01';

6. Вивести загальну кількість сторінок по кожній назві категорії. Фільтр по спадаючій кількості сторінок.
SELECT book_category.Category, SUM(Book.Pages) as Total_Pages
FROM Book
INNER JOIN book_category ON Book.Category_id = book_category.id
GROUP BY book_category.Category
ORDER BY Total_Pages DESC;

7. Вивести середню вартість книг по темі 'Використання ПК' і категорії 'Linux'.=
SELECT  AVG(Book.Price) as Average_Price
FROM Book
INNER JOIN book_topic ON Book.Topic_id = book_topic.id
INNER JOIN book_category ON Book.Category_id = book_category.id
WHERE book_topic.Topic = 'Використання ПК' AND book_category.Category = 'Linux';

8. Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи where.
SELECT * FROM Book
INNER JOIN book_production ON Book.Production_id = book_production.id
INNER JOIN book_category ON Book.Category_id = book_category.id
INNER JOIN book_topic ON Book.Topic_id = book_topic.id
WHERE Book.Price > 0;

9. Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи inner join.
SELECT * FROM Book
INNER JOIN book_production ON Book.Production_id = book_production.id
INNER JOIN book_category ON Book.Category_id = book_category.id
INNER JOIN book_topic ON Book.Topic_id = book_topic.id
WHERE Book.Price > 0

10. Вивести всі дані універсального відношення. Використовувати зовнішнє з'єднання, застосовуючи left join / rigth join.
SELECT * FROM Book
LEFT JOIN book_production ON Book.Production_id = book_production.id
LEFT JOIN book_category ON Book.Category_id = book_category.id
RIGHT JOIN book_topic ON Book.Topic_id = book_topic.id
WHERE Book.Price > 0

11. Вивести пари книг, що мають однакову кількість сторінок. Використовувати само об’єднання і аліаси (self join).
12. Вивести тріади книг, що мають однакову ціну. Використовувати самооб'єднання і аліаси (self join).

13. Вивести всі книги категорії 'C ++'. Використовувати підзапити (subquery).
SELECT Title FROM Book
WHERE Category_id = (SELECT id FROM book_category WHERE Category = 'C&C++');
14. Вивести книги видавництва 'BHV', видані після 2000 р Використовувати підзапити (subquery).
SELECT Title FROM Book
WHERE Production_id = (SELECT id FROM book_production WHERE Production = 'Видавнича група BHV') 
 AND Date > 1999-12-31 OR Date > 31/12/1999 ;
15. Вивести список видавництв, у яких розмір книг перевищує 400 сторінок. Використовувати пов'язані підзапити (correlated su
SELECT Production_id
FROM (
    SELECT book.Production_id, MIN(book.Pages) as min
    FROM Book
    GROUP BY book.Production_id
) subquery
INNER JOIN book_production ON Production_id = book_production.id
WHERE subquery.min > pagelim;

16. Вивести список категорій в яких більше 3-х книг. Використовувати пов'язані підзапити (correlated subquery).
SELECT Category FROM book_category
WHERE (SELECT COUNT(*) FROM Book  WHERE Category_id = book_category.id) > 3;

17. Вивести список книг видавництва 'BHV', якщо в списку є хоча б одна книга цього видавництва. Використовувати exists.
SELECT * FROM Book
WHERE EXISTS (
    SELECT * FROM book_production
    WHERE Production = 'Видавнича група BHV' AND Book.Production_id = book_production.id
);
18. Вивести список книг видавництва 'BHV', якщо в списку немає жодної книги цього видавництва. Використовувати not exists.
SELECT * FROM Book
WHERE NOT EXISTS (
    SELECT * FROM book_production
    WHERE Production = 'Видавнича група BHV' AND Book.Production_id = book_production.id
);
19. Вивести відсортований загальний список назв тем і категорій. Використовувати union.
SELECT  book_category.id, book_category.Category FROM `book_category` 
UNION 
SELECT book_production.id, book_production.Production FROM `book_production` 
UNION 
SELECT  book_topic.id, book_topic.Topic FROM `book_topic`
ORDER BY id;
20. Вивести відсортований в зворотному порядку загальний список перших слів, назв книг і категорій що не повторюються. Використовувати union.bquery).
SELECT SUBSTRING_INDEX(Title, ' ', 1) as FirstWordTitle FROM book ORDER BY FirstWordTitle DESC;



